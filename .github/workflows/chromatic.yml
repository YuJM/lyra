name: Chromatic Deployment

on:
  push:
    branches:
      - main
      - dev
      - feat/**
  pull_request:
    branches:
      - main

# Chromatic 배포 작업이 동시에 실행되지 않도록 방지
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  chromatic:
    name: Publish to Chromatic
    runs-on: ubuntu-latest

    steps:
      # 1. 저장소 체크아웃 (full git history 필요 - TurboSnap을 위해)
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 전체 git history 가져오기 (TurboSnap에 필수)

      # 2. pnpm 설치
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      # 3. Node.js 설정
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'

      # 4. 의존성 설치
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # 5. Turborepo 캐시 설정 (선택사항이지만 빌드 속도 향상)
      - name: Setup Turborepo cache
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      # 6. UI 패키지 빌드 (Storybook 빌드 포함)
      - name: Build UI package
        run: pnpm build --filter=@lyra/ui

      # 7. Chromatic 배포
      - name: Publish to Chromatic
        uses: chromaui/action@latest
        with:
          # Chromatic 프로젝트 토큰 (Repository Secrets에 설정 필요)
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}

          # Storybook 빌드 결과물 경로
          storybookBuildDir: packages/ui/storybook-static

          # TurboSnap 활성화 - 변경된 컴포넌트만 스냅샷 촬영하여 속도 향상
          onlyChanged: true

          # 외부 의존성 (TurboSnap이 추적할 추가 경로)
          # 디자인 토큰이나 글로벌 스타일 변경 시에도 스냅샷 촬영
          externals: |
            packages/design-tokens/**
            packages/ui/src/global.css

          # main 브랜치의 변경사항은 자동 승인 (baseline 유지)
          autoAcceptChanges: ${{ github.ref == 'refs/heads/main' && 'true' || 'false' }}

          # 의존성 업데이트 브랜치는 자동으로 건너뛰기
          skip: 'dependabot/**,renovate/**'

          # 시각적 변경이 감지되어도 워크플로우를 실패시키지 않음
          exitZeroOnChanges: true

          # 큰 프로젝트의 경우 압축 활성화 (업로드 속도 향상)
          zip: true

      # 8. Chromatic 결과 출력
      - name: Output Chromatic URL
        if: success()
        run: |
          echo "📚 Storybook URL: ${{ steps.chromatic.outputs.storybookUrl }}"
          echo "🔗 Build URL: ${{ steps.chromatic.outputs.buildUrl }}"
          echo "📊 Changes: ${{ steps.chromatic.outputs.changeCount }}"
